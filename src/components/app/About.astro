---
import Section from "@/layouts/Section.astro"
import { SECTIONS_IDS } from "@/helpers/adaptHeaderItems"
import { Button, Title } from "@/components/ui"

const { i18n } = Astro.props as { i18n: ABOUT }
---

<Section 
  id={SECTIONS_IDS[0]} 
  maxWidth="900px" 
  animated={true}
>
  <div class="scroll-animation flex flex-col">
    <Title>{ i18n.TITLE }</Title>
    <div class="flex flex-col items-center justify-center tablet:items-start tablet:flex-row-reverse gap-12">
      <span class="relative shrink-0 w-[275px] h-[275px] bg-aboutMe bg-cover rounded-lg before:contenct-[''] before:absolute before:top-0 before:left-0 before:scale-[1.03] before:hover:scale-105 before:transition-transform before:w-full before:h-full before:[background:_inherit] before:rounded-lg before:blur-[15px] before:bg-cover before:opacity-50 before:-z-10" />
      <div class="flex flex-col gap-4 ">
        <p>{i18n.PARAGRAPH_1.PART_1} <span id="age"></span> {i18n.PARAGRAPH_1.PART_2}</p>
        <p>{i18n.PARAGRAPH_2}</p>
        <p>{i18n.PARAGRAPH_3}</p>
        <div>
          <p>{i18n.PARAGRAPH_4}</p>
          <div class="mt-3 flex flex-wrap gap-3">
            { i18n.SKILLS.map((skill: string) => (
              <Button variant="outlined" className="text-sm font-medium !px-4 !rounded-lg">
                {skill}
              </Button>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</Section>

<script>
  function calculateAge() {
    const myBDay = new Date('1999-04-02');
    const today = new Date();
    const differenceInMilliseconds = today.getTime() - myBDay.getTime();
    const yearsOld = Math.floor(differenceInMilliseconds / (1000 * 60 * 60 * 24 * 365.25));
    
    const ageElement = document.getElementById('age');

    if (ageElement) {
      ageElement.textContent = yearsOld.toString();
    }
  }

  calculateAge();

  const now = new Date();
  const night = new Date(
    now.getFullYear(),
    now.getMonth(),
    now.getDate() + 1,
    0, 0, 0
  );
  const msToMidnight = night.getTime() - now.getTime();
  
  setTimeout(() => {
    calculateAge();
    setInterval(calculateAge, 24 * 60 * 60 * 1000);
  }, msToMidnight);
</script>